#!/usr/bin/env python3
# -*- coding: UTF-8 -*-

from sys import argv, stdin, stderr
import yaml, re, os

def is_compatible(file, metadata, compatible):
    try:
        for dtbo_compatible in metadata["compatible"][0].split("\x00"):
            if dtbo_compatible in compatible:
                return True
    # If the error type is KeyError it is assumed to be a third-party overlay installed by the user, which is compatible by default.
    except KeyError:
        return True
    return False

files = argv[1:]

# If this file does not exist, it is assumed that the image is generated inside the chroot
try:
    compatible= open("/sys/firmware/devicetree/base/compatible").read().split("\x00")[0:-1]
except FileNotFoundError as e:
    for file in files:
        print(file)
    exit(0)

yaml.CLoader.add_constructor('!u8', yaml.constructor.FullConstructor.construct_yaml_seq)

for file in files:
    metadata=yaml.load(os.popen("dtc -I dtb -O dts " + file + " 2>/dev/null | dtc -I dts -O yaml 2>/dev/null").read(), Loader=yaml.CLoader)[0]["metadata"]
    if is_compatible(file, metadata, compatible):
        print(file)
